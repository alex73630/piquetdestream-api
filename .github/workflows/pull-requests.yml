name: Pull Request
on:
  pull_request:
    branches: [master]

jobs:
  runLinters:
    name: Run linters
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Node.js dependencies
        run: npm ci

      - name: Run TypeScript type-checking
        run: npm run type-check

      - name: Run ESLint
        uses: wearerequired/lint-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Enable linters
          eslint: true
          eslint_args: --ext js,ts --fix ./src/**/*

  buildAndTest:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build the app
        run: npm run build

      - name: Setup environment variables for tests
        run: |
          echo "NODE_ENV=production" >> .env
          echo "API_DOMAIN=localhost" >> .env
          echo "PORT=3000" >> .env
          echo "CORS_ORIGINS=http://localhost,http://localhost:3000" >> .env
          echo "REDIS_URL=redis://localhost:6379" >> .env
          echo "HELLOASSO_CLIENT_ID=123" >> .env
          echo "HELLOASSO_CLIENT_SECRET=123" >> .env
          echo "AUTH_TOKEN=123" >> .env

      - name: Test the app on Node.js ${{ matrix.node-version }}
        run: npm test

      - name: Run e2e tests
        run: npm run test:e2e

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-${{ matrix.node-version }}
          path: |
            dist
